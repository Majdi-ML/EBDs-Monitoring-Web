{% extends 'base.html.twig' %}

{% block title %}Hello OoredooController!
{% endblock %}

{% block body %}

{# 
	<section class="section">
		<div class="row">

			<div class="col-lg-6">
				<div class="card">
					<div class="card-body">
						<h5 class="card-title">Répartition des Clusters par État</h5>

						<!-- Bar Chart -->
						<canvas id="clusterBarChart" style="max-height: 400px;"></canvas>
						<script>
    document.addEventListener("DOMContentLoaded", () => {
        const etatCounts = {{ etatCounts|json_encode|raw }};
        console.log("etatCounts:", etatCounts); // Utilisation de console.log pour afficher les données

        new Chart(document.querySelector('#clusterBarChart'), {
            type: 'bar',
            data: {
                labels: Object.keys(etatCounts),
                datasets: [
                    {
                        label: 'Nombre de Clusters',
                        data: Object.values(etatCounts),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 205, 86, 0.2)', 'rgba(54, 162, 235, 0.2)'
                        ],
                        borderColor: [
                            'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(54, 162, 235)'
                        ],
                        borderWidth: 1
                    }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>
						<!-- End Bar Chart -->

					</div>
				</div>
			</div>
		</div>


	</section> #}


  
  <div class="col-lg-12">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Dashboard</h5>

            <!-- Liste déroulante pour filtrer par partie -->
            <div class="col-lg-4">
<label for="partSelect">Sélectionnez un serveur :</label>
            <select id="partSelect" class="form-select" >
                {% for part in secondPart %}
                    <option value="{{ part }}">{{ part }}</option>
                {% endfor %}
            </select>
            </div>

            <!-- Bar Chart -->
            <canvas id="barChart" style="max-height: 400px;"></canvas>
            <script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js"></script>

            <script src="https://cdn.jsdelivr.net/npm/chart.js" ></script>

            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const ctx = document.querySelector('#barChart').getContext('2d');
                    let selectedPart = document.querySelector('#partSelect').value;

                    // Données initiales pour le graphique
                    const initialData = {
                        labels: ['Cluster', 'LogFiles', 'LogFilesPatterns','Serveurs', 'Requetessql', 'TrapsSnmp','Url', 'Process', 'Scripts', /* ... */],
                        datasets: [{
                                label: 'Number of Data',
                                data: [{{ data['Cluster'] }}, {{ data['LogFiles'] }}, {{ data['LogFilesPatterns'] }},{{ data['Serveurs'] }}, {{ data['Requetessql'] }}, {{ data['TrapsSnmp'] }},{{ data['Url'] }}, {{ data['Process'] }}, {{ data['Scripts'] }}, /* Add more data */],
                                backgroundColor: [
    'rgba(255, 99, 132, 0.2)',
    'rgba(54, 162, 235, 0.2)',
    'rgba(255, 205, 86, 0.2)',
    'rgba(75, 192, 192, 0.2)',
    'rgba(153, 102, 255, 0.2)',
    'rgba(201, 203, 207, 0.2)',
    'rgba(255, 159, 64, 0.2)',
    'rgba(100, 100, 100, 0.2)',
    'rgba(0, 128, 0, 0.2)'
],
borderColor: [
    'rgba(255, 99, 132, 0.8)',
    'rgba(54, 162, 235, 0.8)',
    'rgba(255, 205, 86, 0.8)',
    'rgba(75, 192, 192, 0.8)',
    'rgba(153, 102, 255, 0.8)',
    'rgba(201, 203, 207, 0.8)',
    'rgba(255, 159, 64, 0.8)',
    'rgba(100, 100, 100, 0.8)',
    'rgba(0, 128, 0, 0.8)'
],

                               borderWidth: 1
                        }]
                    };

                    const config = {
            type: 'bar',
            data: initialData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
    legend: {
        onClick: (e, legendItem) => {
            const index = legendItem.datasetIndex;
            const tableName = config.data.labels[index];
            console.log('Legend item clicked:', tableName, selectedPart);
            const url = `http://127.0.0.1:8000/ooredoo/admin/${tableName}/?filter=${selectedPart}`;
            console.log('URL to open:', url);
            window.open(url);
        }
    }
}
            }
        };
                    const chart = new Chart(ctx, config);

                    // Écouteur pour la sélection de partie
                    const partSelect = document.querySelector('#partSelect');
                   partSelect.addEventListener('change', () => {
    selectedPart = partSelect.value;
    console.log('Selected Part changed:', selectedPart);
    fetch(`/get-filtered-data/${selectedPart}`)
        .then(response => response.json())
        .then(newData => {
            chart.data.datasets[0].data = newData;
            chart.update();
        });
});

                });
            </script>
           
            <!-- Fin Bar Chart -->
        </div>
    </div>
</div>






{% endblock %}
