{% extends 'base.html.twig' %}

{% block title %}Url index{% endblock %}

{% block body %}
     <div class="pagetitle">
      <h1 class="pagetitle">Urls</h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="{{ path('app_ooredoo2') }}">Home</a></li>
          <li class="breadcrumb-item ">Dashboard</li>
        </ol>
      </nav>
    </div>

<section class="section">
			<div class="row">
    <div class="col-lg-4">
          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Répartition par État</h5>

              <!-- Stacked Bar Chart -->
 <canvas id="barChart" style="max-height: 400px;"></canvas>
      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const supportValues = {{ supportValues|json_encode|raw }};

          new Chart(document.querySelector('#barChart'), {
            type: 'bar',
            data: {
              labels: Object.keys(supportValues),
              datasets: [{
                label: 'Dataset 1',
                data: Object.values(supportValues),
                backgroundColor:[
                  'rgb(255, 0, 0)',      // Rouge
                  'rgb(255, 165, 0)',    // Orange
                  'rgb(0, 255, 0)',      // Vert
                  'rgb(173, 216, 230)'   // Bleu ciel
                ],   // Bleu ciel
                borderColor: [
                  'rgb(255, 0, 0)',      // Rouge
                  'rgb(255, 165, 0)',    // Orange
                  'rgb(0, 255, 0)',      // Vert
                  'rgb(173, 216, 230)'   // Bleu ciel
                ],
                borderWidth: 1
              }]
            },
            options: {
              scales: {
                x: {
                  beginAtZero: true
                },
                y: {
                  beginAtZero: true
                }
              }
            }
          });
        });
      </script>
<!-- End Stacked Bar Chart -->

             

            </div>
          </div>
        </div>


<div class="col-lg-4">
				<div class="card">
					<div class="card-body">
						<h5 class="card-title">Répartition par monitoredBy</h5>
<div id="donutChart"></div>

      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const chartData = {{ chartData|json_encode|raw }};

          const dataValues = Object.values(chartData);
          const dataLabels = Object.keys(chartData);

          new ApexCharts(document.querySelector("#donutChart"), {
            series: dataValues,
            chart: {
              height: 350,
              type: 'donut',
              toolbar: {
                show: true
              }
            },
            labels: dataLabels,
          }).render();
        });
      </script>
						<!-- End Polar Area Chart -->

					</div>
				</div>
			</div>
<div class="col-lg-4">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Répartition par criticite </h5>

            <!-- Pie Chart -->
            <div id="pieChart"></div>

            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const chartos = {{ chartos|json_encode|raw }};
                    const labels = Object.keys(chartos);
                    const data = Object.values(chartos);

                    new ApexCharts(document.querySelector("#pieChart"), {
                        series: data,
                        chart: {
                            height: 350,
                            type: 'pie',
                            toolbar: {
                                show: true
                            }
                        },
                        labels: labels
                    }).render();
                });
            </script>
            <!-- End Pie Chart -->

        </div>
    </div>
</div>
</div>
		


	</section>


     <div class="col-lg-4">
    <label for="filterSelect">Choisir un mot :</label>

<form action="{{ path('app_url_index') }}" method="get">
    <select id="filterSelect" name="filter" class="form-select" onchange="this.form.submit()">
        <option value="">Tous</option>
        {% for secondPart in uniqueSecondParts %}
            <option value="{{ secondPart }}" {% if filter == secondPart %}selected{% endif %}>{{ secondPart }}</option>
        {% endfor %}
    </select>
</form>
</div>
<br>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th style="background-color: #bbbbbb;">Id</th>
                <th style="background-color: #bbbbbb;">Ref</th>
                <th style="background-color: #bbbbbb;">Etat</th>
                <th style="background-color: #bbbbbb;">RefComposant</th>
                <th style="background-color: #bbbbbb;">RgSgSiCluster</th>
                <th style="background-color: #bbbbbb;">Url</th>
                <th style="background-color: #bbbbbb;">PerformAction</th>
                <th style="background-color: #bbbbbb;">Criticite</th>
                <th style="background-color: #bbbbbb;">MessageAlarme</th>
                <th style="background-color: #bbbbbb;">Instructions</th>
                <th style="background-color: #bbbbbb;">IntervalleDePolling</th>
                <th style="background-color: #bbbbbb;">RefService</th>
                <th style="background-color: #bbbbbb;">Objet</th>
                <th style="background-color: #bbbbbb;">MonitoredBy</th>
                <th style="background-color: #bbbbbb;">NomTemplate</th>
            </tr>
        </thead>
        <tbody>
        {% for url in urls %}
        {% if url.support in app.user.roles[0] %}
            <tr>
                <td>{{ url.id }}</td>
                <td class="table-warning">{{ url.ref }}</td>
                <td style="{% if url.etat == 'Supprimé' %}background-color: red;{% elseif url.etat == 'Modifié' %}background-color: orange;{% elseif url.etat == 'Nouveau' %}background-color:  #5af700;{% elseif url.etat == 'Inchangé' %}background-color: lightblue;{% endif %}">
  {{ url.etat }}
</td>
                <td  style="background-color: #3ef3a0;">{{ url.refComposant }}</td>
                <td  style="background-color: #3ef3a0;">{{ url.rgSgSiCluster }}</td>
                <td>{{ url.url }}</td>
                <td>{{ url.performAction }}</td>
                <td style="{% if url.criticite == 'Critique' %}background-color: red;{% elseif url.criticite == 'Majeure' %}background-color: orange;{% elseif url.criticite == 'Normale' %}background-color:  #5af700;{% endif %}">
  {{ url.criticite }}
</td>
                <td>{{ url.messageAlarme }}</td>
                <td>{{ url.instructions }}</td>
                <td>{{ url.intervalleDePolling }}</td>
                <td  style="background-color: #3ef3a0;">{{ url.refService }}</td>
                <td  style="background-color: #3ef3a0;">{{ url.objet }}</td>
                <td>{{ url.monitoredBy }}</td>
                <td>{{ url.nomTemplate }}</td>
                <td>
                    <a class="btn btn-info btn-sm" href="{{ path('app_url2_show', {'id': url.id}) }}">show</a>
                </td>
                <td> 
                    <a class="btn btn-warning btn-sm" href="{{ path('app_url2_edit', {'id': url.id}) }}">edit</a>
                </td>
            </tr>
            {% endif %}
        {% else %}
            <tr>
                <td colspan="17">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
{{ knp_pagination_render(urls) }}
    <a class="btn btn-outline-success" href="{{ path('app_url2_new') }}">Create new</a>
{% endblock %}
